{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Licenser",
          "name": "_licenser",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DNftDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotLicensed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "licenser",
      "outputs": [
        {
          "internalType": "contract Licenser",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mintedDyad",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b50604051620014aa380380620014aa833981016040819052620000359162000162565b6040518060400160405280600b81526020016a4459414420537461626c6560a81b815250604051806040016040528060048152602001631116505160e21b8152506012826000908162000089919062000239565b50600162000098838262000239565b5060ff81166080524660a052620000ae620000c6565b60c0525050506001600160a01b031660e05262000383565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000fa919062000305565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6000602082840312156200017557600080fd5b81516001600160a01b03811681146200018d57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001bf57607f821691505b602082108103620001e057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023457600081815260208120601f850160051c810160208610156200020f5750805b601f850160051c820191505b8181101562000230578281556001016200021b565b5050505b505050565b81516001600160401b0381111562000255576200025562000194565b6200026d81620002668454620001aa565b84620001e6565b602080601f831160018114620002a557600084156200028c5750858301515b600019600386901b1c1916600185901b17855562000230565b600085815260208120601f198616915b82811015620002d657888601518255948401946001909101908401620002b5565b5085821015620002f55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008083546200031581620001aa565b60018281168015620003305760018114620003465762000377565b60ff198416875282151583028701945062000377565b8760005260208060002060005b858110156200036e5781548a82015290840190820162000353565b50505082870194505b50929695505050505050565b60805160a05160c05160e0516110df620003cb600039600081816102a2015281816105be01526106ed0152600061056e015260006105390152600061017501526110df6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637f4781fc11610097578063a9059cbb11610066578063a9059cbb1461024c578063d505accf1461025f578063dd62ed3e14610272578063f790d78f1461029d57600080fd5b80637f4781fc146101f1578063836a10401461021c57806395d89b41146102315780639eea5f661461023957600080fd5b8063313ce567116100d3578063313ce567146101705780633644e515146101a957806370a08231146101b15780637ecebe00146101d157600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd1461015d575b600080fd5b61010d6102e9565b60405161011a9190610d21565b60405180910390f35b610136610131366004610db6565b610377565b604051901515815260200161011a565b61014f60025481565b60405190815260200161011a565b61013661016b366004610de0565b6103f1565b6101977f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161011a565b61014f610535565b61014f6101bf366004610e1c565b60036020526000908152604090205481565b61014f6101df366004610e1c565b60056020526000908152604090205481565b61014f6101ff366004610db6565b600660209081526000928352604080842090915290825290205481565b61022f61022a366004610e3e565b610590565b005b61010d6106b2565b61022f610247366004610e3e565b6106bf565b61013661025a366004610db6565b6107d7565b61022f61026d366004610e63565b61085c565b61014f610280366004610ed6565b600460209081526000928352604080842090915290825290205481565b6102c47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161011a565b600080546102f690610f09565b80601f016020809104026020016040519081016040528092919081815260200182805461032290610f09565b801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103df9086815260200190565b60405180910390a35060015b92915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610485576104538382610f8b565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff8516600090815260036020526040812080548592906104ba908490610f8b565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105229087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461056b57610566610b80565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6040517fa542c2a40000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a542c2a490602401602060405180830381865afa15801561061a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063e9190610f9e565b610674576040517f96dcc1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61067e8282610c1a565b336000908152600660209081526040808320868452909152812080548392906106a8908490610fc0565b9091555050505050565b600180546102f690610f09565b6040517fa542c2a40000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a542c2a490602401602060405180830381865afa158015610749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076d9190610f9e565b6107a3576040517f96dcc1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107ad8282610c93565b336000908152600660209081526040808320868452909152812080548392906106a8908490610f8b565b336000908152600360205260408120805483919083906107f8908490610f8b565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103df9086815260200190565b428410156108cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016108d7610535565b73ffffffffffffffffffffffffffffffffffffffff8a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e0830190915280519201919091207f190100000000000000000000000000000000000000000000000000000000000061010083015261010282019290925261012281019190915261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610a29573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590610aa457508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e455200000000000000000000000000000000000060448201526064016108c2565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610bb29190610fd3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8060026000828254610c2c9190610fc0565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290610cc8908490610f8b565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c87565b600060208083528351808285015260005b81811015610d4e57858101830151858201604001528201610d32565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610db157600080fd5b919050565b60008060408385031215610dc957600080fd5b610dd283610d8d565b946020939093013593505050565b600080600060608486031215610df557600080fd5b610dfe84610d8d565b9250610e0c60208501610d8d565b9150604084013590509250925092565b600060208284031215610e2e57600080fd5b610e3782610d8d565b9392505050565b600080600060608486031215610e5357600080fd5b83359250610e0c60208501610d8d565b600080600080600080600060e0888a031215610e7e57600080fd5b610e8788610d8d565b9650610e9560208901610d8d565b95506040880135945060608801359350608088013560ff81168114610eb957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ee957600080fd5b610ef283610d8d565b9150610f0060208401610d8d565b90509250929050565b600181811c90821680610f1d57607f821691505b602082108103610f56577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156103eb576103eb610f5c565b600060208284031215610fb057600080fd5b81518015158114610e3757600080fd5b808201808211156103eb576103eb610f5c565b600080835481600182811c915080831680610fef57607f831692505b60208084108203611027577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b81801561103b576001811461106e5761109b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616895284151585028901965061109b565b60008a81526020902060005b868110156110935781548b82015290850190830161107a565b505084890196505b50949897505050505050505056fea26469706673582212204af8fdc2a56044f5ed11c1367ed27e9c8a89df89f5624f3f62cd379221c1c1e564736f6c63430008110033",
    "sourceMap": "206:842:38:-:0;;;415:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1981:292:29;;;;;;;;;;;;;-1:-1:-1;;;1981:292:29;;;;;;;;;;;;;;;;-1:-1:-1;;;1981:292:29;;;252:2:38;2101:5:29;2094:4;:12;;;;;;:::i;:::-;-1:-1:-1;2116:6:29;:16;2125:7;2116:6;:16;:::i;:::-;-1:-1:-1;2142:20:29;;;;;2192:13;2173:32;;2242:24;:22;:24::i;:::-;2215:51;;-1:-1:-1;;;;;;;;462:20:38;;;206:842;;5510:446:29;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;4156:25:53;;;;4197:18;;4190:34;;;;5833:14:29;4240:18:53;;;4233:34;5869:13:29;4283:18:53;;;4276:34;5912:4:29;4326:19:53;;;4319:61;4128:19;;5640:295:29;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;14:308:53:-;102:6;155:2;143:9;134:7;130:23;126:32;123:52;;;171:1;168;161:12;123:52;197:16;;-1:-1:-1;;;;;242:31:53;;232:42;;222:70;;288:1;285;278:12;222:70;311:5;14:308;-1:-1:-1;;;14:308:53:o;327:127::-;388:10;383:3;379:20;376:1;369:31;419:4;416:1;409:15;443:4;440:1;433:15;459:380;538:1;534:12;;;;581;;;602:61;;656:4;648:6;644:17;634:27;;602:61;709:2;701:6;698:14;678:18;675:38;672:161;;755:10;750:3;746:20;743:1;736:31;790:4;787:1;780:15;818:4;815:1;808:15;672:161;;459:380;;;:::o;970:545::-;1072:2;1067:3;1064:11;1061:448;;;1108:1;1133:5;1129:2;1122:17;1178:4;1174:2;1164:19;1248:2;1236:10;1232:19;1229:1;1225:27;1219:4;1215:38;1284:4;1272:10;1269:20;1266:47;;;-1:-1:-1;1307:4:53;1266:47;1362:2;1357:3;1353:12;1350:1;1346:20;1340:4;1336:31;1326:41;;1417:82;1435:2;1428:5;1425:13;1417:82;;;1480:17;;;1461:1;1450:13;1417:82;;;1421:3;;;1061:448;970:545;;;:::o;1691:1352::-;1811:10;;-1:-1:-1;;;;;1833:30:53;;1830:56;;;1866:18;;:::i;:::-;1895:97;1985:6;1945:38;1977:4;1971:11;1945:38;:::i;:::-;1939:4;1895:97;:::i;:::-;2047:4;;2111:2;2100:14;;2128:1;2123:663;;;;2830:1;2847:6;2844:89;;;-1:-1:-1;2899:19:53;;;2893:26;2844:89;-1:-1:-1;;1648:1:53;1644:11;;;1640:24;1636:29;1626:40;1672:1;1668:11;;;1623:57;2946:81;;2093:944;;2123:663;917:1;910:14;;;954:4;941:18;;-1:-1:-1;;2159:20:53;;;2277:236;2291:7;2288:1;2285:14;2277:236;;;2380:19;;;2374:26;2359:42;;2472:27;;;;2440:1;2428:14;;;;2307:19;;2277:236;;;2281:3;2541:6;2532:7;2529:19;2526:201;;;2602:19;;;2596:26;-1:-1:-1;;2685:1:53;2681:14;;;2697:3;2677:24;2673:37;2669:42;2654:58;2639:74;;2526:201;-1:-1:-1;;;;;2773:1:53;2757:14;;;2753:22;2740:36;;-1:-1:-1;1691:1352:53:o;3048:844::-;3178:3;3207:1;3240:6;3234:13;3270:36;3296:9;3270:36;:::i;:::-;3325:1;3342:18;;;3369:133;;;;3516:1;3511:356;;;;3335:532;;3369:133;-1:-1:-1;;3402:24:53;;3390:37;;3475:14;;3468:22;3456:35;;3447:45;;;-1:-1:-1;3369:133:53;;3511:356;3542:6;3539:1;3532:17;3572:4;3617:2;3614:1;3604:16;3642:1;3656:165;3670:6;3667:1;3664:13;3656:165;;;3748:14;;3735:11;;;3728:35;3791:16;;;;3685:10;;3656:165;;;3660:3;;;3850:6;3845:3;3841:16;3834:23;;3335:532;-1:-1:-1;3883:3:53;;3048:844;-1:-1:-1;;;;;;3048:844:53:o;3897:489::-;206:842:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80637f4781fc11610097578063a9059cbb11610066578063a9059cbb1461024c578063d505accf1461025f578063dd62ed3e14610272578063f790d78f1461029d57600080fd5b80637f4781fc146101f1578063836a10401461021c57806395d89b41146102315780639eea5f661461023957600080fd5b8063313ce567116100d3578063313ce567146101705780633644e515146101a957806370a08231146101b15780637ecebe00146101d157600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd1461015d575b600080fd5b61010d6102e9565b60405161011a9190610d21565b60405180910390f35b610136610131366004610db6565b610377565b604051901515815260200161011a565b61014f60025481565b60405190815260200161011a565b61013661016b366004610de0565b6103f1565b6101977f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161011a565b61014f610535565b61014f6101bf366004610e1c565b60036020526000908152604090205481565b61014f6101df366004610e1c565b60056020526000908152604090205481565b61014f6101ff366004610db6565b600660209081526000928352604080842090915290825290205481565b61022f61022a366004610e3e565b610590565b005b61010d6106b2565b61022f610247366004610e3e565b6106bf565b61013661025a366004610db6565b6107d7565b61022f61026d366004610e63565b61085c565b61014f610280366004610ed6565b600460209081526000928352604080842090915290825290205481565b6102c47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161011a565b600080546102f690610f09565b80601f016020809104026020016040519081016040528092919081815260200182805461032290610f09565b801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103df9086815260200190565b60405180910390a35060015b92915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610485576104538382610f8b565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff8516600090815260036020526040812080548592906104ba908490610f8b565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105229087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461056b57610566610b80565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6040517fa542c2a40000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a542c2a490602401602060405180830381865afa15801561061a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063e9190610f9e565b610674576040517f96dcc1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61067e8282610c1a565b336000908152600660209081526040808320868452909152812080548392906106a8908490610fc0565b9091555050505050565b600180546102f690610f09565b6040517fa542c2a40000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a542c2a490602401602060405180830381865afa158015610749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076d9190610f9e565b6107a3576040517f96dcc1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107ad8282610c93565b336000908152600660209081526040808320868452909152812080548392906106a8908490610f8b565b336000908152600360205260408120805483919083906107f8908490610f8b565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103df9086815260200190565b428410156108cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016108d7610535565b73ffffffffffffffffffffffffffffffffffffffff8a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e0830190915280519201919091207f190100000000000000000000000000000000000000000000000000000000000061010083015261010282019290925261012281019190915261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610a29573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590610aa457508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e455200000000000000000000000000000000000060448201526064016108c2565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610bb29190610fd3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8060026000828254610c2c9190610fc0565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290610cc8908490610f8b565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c87565b600060208083528351808285015260005b81811015610d4e57858101830151858201604001528201610d32565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610db157600080fd5b919050565b60008060408385031215610dc957600080fd5b610dd283610d8d565b946020939093013593505050565b600080600060608486031215610df557600080fd5b610dfe84610d8d565b9250610e0c60208501610d8d565b9150604084013590509250925092565b600060208284031215610e2e57600080fd5b610e3782610d8d565b9392505050565b600080600060608486031215610e5357600080fd5b83359250610e0c60208501610d8d565b600080600080600080600060e0888a031215610e7e57600080fd5b610e8788610d8d565b9650610e9560208901610d8d565b95506040880135945060608801359350608088013560ff81168114610eb957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ee957600080fd5b610ef283610d8d565b9150610f0060208401610d8d565b90509250929050565b600181811c90821680610f1d57607f821691505b602082108103610f56577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156103eb576103eb610f5c565b600060208284031215610fb057600080fd5b81518015158114610e3757600080fd5b808201808211156103eb576103eb610f5c565b600080835481600182811c915080831680610fef57607f831692505b60208084108203611027577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b81801561103b576001811461106e5761109b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616895284151585028901965061109b565b60008a81526020902060005b868110156110935781548b82015290850190830161107a565b505084890196505b50949897505050505050505056fea26469706673582212204af8fdc2a56044f5ed11c1367ed27e9c8a89df89f5624f3f62cd379221c1c1e564736f6c63430008110033",
    "sourceMap": "206:842:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:18:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2461:211;;;;;;:::i;:::-;;:::i;:::-;;;1251:14:53;;1244:22;1226:41;;1214:2;1199:18;2461:211:29;1086:187:53;1304:26:29;;;;;;;;;1424:25:53;;;1412:2;1397:18;1304:26:29;1278:177:53;3057:592:29;;;;;;:::i;:::-;;:::i;1083:31::-;;;;;;;;1965:4:53;1953:17;;;1935:36;;1923:2;1908:18;1083:31:29;1793:184:53;5327:177:29;;;:::i;1337:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1751:41;;;;;;:::i;:::-;;;;;;;;;;;;;;348:61:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;628:193;;;;;;:::i;:::-;;:::i;:::-;;1056:20:29;;;:::i;849:197:38:-;;;;;;:::i;:::-;;:::i;2678:373:29:-;;;;;;:::i;:::-;;:::i;3838:1483::-;;;;;;:::i;:::-;;:::i;1388:64::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;267:34:38;;;;;;;;3839:42:53;3827:55;;;3809:74;;3797:2;3782:18;267:34:38;3645:244:53;1031:18:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2461:211::-;2561:10;2535:4;2551:21;;;:9;:21;;;;;;;;;:30;;;;;;;;;;:39;;;2606:37;2535:4;;2551:30;;2606:37;;;;2584:6;1424:25:53;;1412:2;1397:18;;1278:177;2606:37:29;;;;;;;;-1:-1:-1;2661:4:29;2461:211;;;;;:::o;3057:592::-;3209:15;;;3175:4;3209:15;;;:9;:15;;;;;;;;3225:10;3209:27;;;;;;;;3298:17;3287:28;;3283:80;;3347:16;3357:6;3347:7;:16;:::i;:::-;3317:15;;;;;;;:9;:15;;;;;;;;3333:10;3317:27;;;;;;;:46;3283:80;3374:15;;;;;;;:9;:15;;;;;:25;;3393:6;;3374:15;:25;;3393:6;;3374:25;:::i;:::-;;;;-1:-1:-1;;3545:13:29;;;;;;;;:9;:13;;;;;;;:23;;;;;;3594:26;3545:13;;3594:26;;;;;;;3562:6;1424:25:53;;1412:2;1397:18;;1278:177;3594:26:29;;;;;;;;-1:-1:-1;3638:4:29;;3057:592;-1:-1:-1;;;;3057:592:29:o;5327:177::-;5384:7;5427:16;5410:13;:33;:87;;5473:24;:22;:24::i;:::-;5403:94;;5327:177;:::o;5410:87::-;-1:-1:-1;5446:24:29;;5327:177::o;628:193:38:-;535:31;;;;;555:10;535:31;;;3809:74:53;535:8:38;:19;;;;;3782:18:53;;535:31:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;530:58;;575:13;;;;;;;;;;;;;;530:58;755:17:::1;761:2;765:6;755:5;:17::i;:::-;791:10;780:22;::::0;;;:10:::1;:22;::::0;;;;;;;:26;;;;;;;;:36;;810:6;;780:22;:36:::1;::::0;810:6;;780:36:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;628:193:38:o;1056:20:29:-;;;;;;;:::i;849:197:38:-;535:31;;;;;555:10;535:31;;;3809:74:53;535:8:38;:19;;;;;3782:18:53;;535:31:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;530:58;;575:13;;;;;;;;;;;;;;530:58;978:19:::1;984:4;990:6;978:5;:19::i;:::-;1016:10;1005:22;::::0;;;:10:::1;:22;::::0;;;;;;;:26;;;;;;;;:36;;1035:6;;1005:22;:36:::1;::::0;1035:6;;1005:36:::1;:::i;2678:373:29:-:0;2774:10;2748:4;2764:21;;;:9;:21;;;;;:31;;2789:6;;2764:21;2748:4;;2764:31;;2789:6;;2764:31;:::i;:::-;;;;-1:-1:-1;;2941:13:29;;;;;;;:9;:13;;;;;;;:23;;;;;;2990:32;2999:10;;2990:32;;;;2958:6;1424:25:53;;1412:2;1397:18;;1278:177;3838:1483:29;4057:15;4045:8;:27;;4037:63;;;;;;;5503:2:53;4037:63:29;;;5485:21:53;5542:2;5522:18;;;5515:30;5581:25;5561:18;;;5554:53;5624:18;;4037:63:29;;;;;;;;;4265:24;4292:805;4428:18;:16;:18::i;:::-;4873:13;;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4511:449;;4555:165;4511:449;;;5940:25:53;6042:18;;;6035:43;;;;6114:15;;;6094:18;;;6087:43;6146:18;;;6139:34;;;6189:19;;;6182:35;;;;6233:19;;;;6226:35;;;4511:449:29;;;;;;;;;;5912:19:53;;;4511:449:29;;;4472:514;;;;;;;;6542:66:53;4350:658:29;;;6530:79:53;6625:11;;;6618:27;;;;6661:12;;;6654:28;;;;6698:12;;4350:658:29;;;;;;;;;;;;;4319:707;;4350:658;4319:707;;;;4292:805;;;;;;;;;6948:25:53;7021:4;7009:17;;6989:18;;;6982:45;7043:18;;;7036:34;;;7086:18;;;7079:34;;;6920:19;;4292:805:29;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4292:805:29;;;;;;-1:-1:-1;;5120:30:29;;;;;;;:59;;;5174:5;5154:25;;:16;:25;;;5120:59;5112:86;;;;;;;7326:2:53;5112:86:29;;;7308:21:53;7365:2;7345:18;;;7338:30;7404:16;7384:18;;;7377:44;7438:18;;5112:86:29;7124:338:53;5112:86:29;5213:27;;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5283:31;1424:25:53;;;5213:36:29;;5283:31;;;;;1397:18:53;5283:31:29;;;;;;;3838:1483;;;;;;;:::o;5510:446::-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;9108:25:53;;;;9149:18;;9142:34;;;;5833:14:29;9192:18:53;;;9185:34;5869:13:29;9235:18:53;;;9228:34;5912:4:29;9278:19:53;;;9271:84;9080:19;;5640:295:29;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;6150:325::-;6235:6;6220:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;6387:13:29;;;;;;;:9;:13;;;;;;;;:23;;;;;;6436:32;1424:25:53;;;6436:32:29;;1397:18:53;6436:32:29;;;;;;;;6150:325;;:::o;6481:328::-;6553:15;;;;;;;:9;:15;;;;;:25;;6572:6;;6553:15;:25;;6572:6;;6553:25;:::i;:::-;;;;-1:-1:-1;;6721:11:29;:21;;;;;;;6768:34;;1424:25:53;;;-1:-1:-1;;6768:34:29;;;;;;1412:2:53;1397:18;6768:34:29;1278:177:53;14:607;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;612:2;542:66;537:2;529:6;525:15;521:88;510:9;506:104;502:113;494:121;;;;14:607;;;;:::o;626:196::-;694:20;;754:42;743:54;;733:65;;723:93;;812:1;809;802:12;723:93;626:196;;;:::o;827:254::-;895:6;903;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;995:29;1014:9;995:29;:::i;:::-;985:39;1071:2;1056:18;;;;1043:32;;-1:-1:-1;;;827:254:53:o;1460:328::-;1537:6;1545;1553;1606:2;1594:9;1585:7;1581:23;1577:32;1574:52;;;1622:1;1619;1612:12;1574:52;1645:29;1664:9;1645:29;:::i;:::-;1635:39;;1693:38;1727:2;1716:9;1712:18;1693:38;:::i;:::-;1683:48;;1778:2;1767:9;1763:18;1750:32;1740:42;;1460:328;;;;;:::o;2164:186::-;2223:6;2276:2;2264:9;2255:7;2251:23;2247:32;2244:52;;;2292:1;2289;2282:12;2244:52;2315:29;2334:9;2315:29;:::i;:::-;2305:39;2164:186;-1:-1:-1;;;2164:186:53:o;2355:322::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2553:9;2540:23;2530:33;;2582:38;2616:2;2605:9;2601:18;2582:38;:::i;2682:693::-;2793:6;2801;2809;2817;2825;2833;2841;2894:3;2882:9;2873:7;2869:23;2865:33;2862:53;;;2911:1;2908;2901:12;2862:53;2934:29;2953:9;2934:29;:::i;:::-;2924:39;;2982:38;3016:2;3005:9;3001:18;2982:38;:::i;:::-;2972:48;;3067:2;3056:9;3052:18;3039:32;3029:42;;3118:2;3107:9;3103:18;3090:32;3080:42;;3172:3;3161:9;3157:19;3144:33;3217:4;3210:5;3206:16;3199:5;3196:27;3186:55;;3237:1;3234;3227:12;3186:55;2682:693;;;;-1:-1:-1;2682:693:53;;;;3260:5;3312:3;3297:19;;3284:33;;-1:-1:-1;3364:3:53;3349:19;;;3336:33;;2682:693;-1:-1:-1;;2682:693:53:o;3380:260::-;3448:6;3456;3509:2;3497:9;3488:7;3484:23;3480:32;3477:52;;;3525:1;3522;3515:12;3477:52;3548:29;3567:9;3548:29;:::i;:::-;3538:39;;3596:38;3630:2;3619:9;3615:18;3596:38;:::i;:::-;3586:48;;3380:260;;;;;:::o;3894:437::-;3973:1;3969:12;;;;4016;;;4037:61;;4091:4;4083:6;4079:17;4069:27;;4037:61;4144:2;4136:6;4133:14;4113:18;4110:38;4107:218;;4181:77;4178:1;4171:88;4282:4;4279:1;4272:15;4310:4;4307:1;4300:15;4107:218;;3894:437;;;:::o;4336:184::-;4388:77;4385:1;4378:88;4485:4;4482:1;4475:15;4509:4;4506:1;4499:15;4525:128;4592:9;;;4613:11;;;4610:37;;;4627:18;;:::i;4889:277::-;4956:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:52;;;5025:1;5022;5015:12;4977:52;5057:9;5051:16;5110:5;5103:13;5096:21;5089:5;5086:32;5076:60;;5132:1;5129;5122:12;5171:125;5236:9;;;5257:10;;;5254:36;;;5270:18;;:::i;7596:1248::-;7726:3;7755:1;7788:6;7782:13;7818:3;7840:1;7868:9;7864:2;7860:18;7850:28;;7928:2;7917:9;7913:18;7950;7940:61;;7994:4;7986:6;7982:17;7972:27;;7940:61;8020:2;8068;8060:6;8057:14;8037:18;8034:38;8031:222;;8107:77;8102:3;8095:90;8208:4;8205:1;8198:15;8238:4;8233:3;8226:17;8031:222;8269:18;8296:191;;;;8501:1;8496:323;;;;8262:557;;8296:191;8344:66;8333:9;8329:82;8324:3;8317:95;8467:6;8460:14;8453:22;8445:6;8441:35;8436:3;8432:45;8425:52;;8296:191;;8496:323;7543:1;7536:14;;;7580:4;7567:18;;8594:1;8608:165;8622:6;8619:1;8616:13;8608:165;;;8700:14;;8687:11;;;8680:35;8743:16;;;;8637:10;;8608:165;;;8612:3;;8802:6;8797:3;8793:16;8786:23;;8262:557;-1:-1:-1;8835:3:53;;7596:1248;-1:-1:-1;;;;;;;;7596:1248:53:o",
    "linkReferences": {},
    "immutableReferences": {
      "30057": [
        {
          "start": 373,
          "length": 32
        }
      ],
      "30071": [
        {
          "start": 1337,
          "length": 32
        }
      ],
      "30073": [
        {
          "start": 1390,
          "length": 32
        }
      ],
      "31110": [
        {
          "start": 674,
          "length": 32
        },
        {
          "start": 1470,
          "length": 32
        },
        {
          "start": 1773,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256,address,uint256)": "9eea5f66",
    "decimals()": "313ce567",
    "licenser()": "f790d78f",
    "mint(uint256,address,uint256)": "836a1040",
    "mintedDyad(address,uint256)": "7f4781fc",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Licenser\",\"name\":\"_licenser\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DNftDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotLicensed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"licenser\",\"outputs\":[{\"internalType\":\"contract Licenser\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mintedDyad\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(uint256,address,uint256)\":{\"details\":\"The caller must be a licensed vault manager. Vault manager get      licensed by the 'sll'.\",\"params\":{\"amount\":\"The amount of tokens to be burned.\",\"from\":\"The address of the recipient who the tokens will be burnt        from.\",\"id\":\"ID of the dNFT.\"}},\"mint(uint256,address,uint256)\":{\"details\":\"The caller must be a licensed vault manager. Vault manager get      licensed by the 'sll'.\",\"params\":{\"amount\":\"The amount of tokens to be minted.\",\"id\":\"ID of the dNFT.\",\"to\":\"The address of the recipient who will receive the tokens.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256,address,uint256)\":{\"notice\":\"Burns amount of DYAD through a dNFT and licensed vault manager         from a specified address.\"},\"mint(uint256,address,uint256)\":{\"notice\":\"Mints amount of DYAD through a dNFT and licensed vault manager          to a specified address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/Dyad.sol\":\"Dyad\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"src/core/Dyad.sol\":{\"keccak256\":\"0xcc735bd95fa8917736a1f06693198700cd523c5ec6936b28a66054fe05822e2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f95c4f41f87cd9aa6e6e43d45a0839a6a221e737d9c819fff21280e9c1f34ba\",\"dweb:/ipfs/QmdvgrZQCnEDtbSN9jEHsD3r5N8LmE5LAM5y6giVWD1rLW\"]},\"src/core/Licenser.sol\":{\"keccak256\":\"0xb9892f08d3dc897b03080e9d6359327b088f81074bc10f0d32c1962f9b0d09c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aada56172cdfaf01d750431fb8702d29976771ec11b2c6f3a1017c0947f056b6\",\"dweb:/ipfs/QmbZ8JXQ7y3x4UNoiqRsJYMK6DyWbPZp6ajGu7BhRb8Bpb\"]},\"src/interfaces/IDyad.sol\":{\"keccak256\":\"0x503b119f3501fedbda2e1e3eb219b9b57a1d677b8a764b9e760c53497dbff82e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b5e55f86b9169b7a751996c751c86344ea891604d185d7010452b6a8e35beaa\",\"dweb:/ipfs/QmPx7dS1o5Bfp3jYDDhcz7WTrF1dJMQ14XfsGwLcgKGtiX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract Licenser",
              "name": "_licenser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DNftDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotLicensed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "licenser",
          "outputs": [
            {
              "internalType": "contract Licenser",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "mintedDyad",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "burn(uint256,address,uint256)": {
            "details": "The caller must be a licensed vault manager. Vault manager get      licensed by the 'sll'.",
            "params": {
              "amount": "The amount of tokens to be burned.",
              "from": "The address of the recipient who the tokens will be burnt        from.",
              "id": "ID of the dNFT."
            }
          },
          "mint(uint256,address,uint256)": {
            "details": "The caller must be a licensed vault manager. Vault manager get      licensed by the 'sll'.",
            "params": {
              "amount": "The amount of tokens to be minted.",
              "id": "ID of the dNFT.",
              "to": "The address of the recipient who will receive the tokens."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(uint256,address,uint256)": {
            "notice": "Burns amount of DYAD through a dNFT and licensed vault manager         from a specified address."
          },
          "mint(uint256,address,uint256)": {
            "notice": "Mints amount of DYAD through a dNFT and licensed vault manager          to a specified address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/core/Dyad.sol": "Dyad"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/core/Dyad.sol": {
        "keccak256": "0xcc735bd95fa8917736a1f06693198700cd523c5ec6936b28a66054fe05822e2e",
        "urls": [
          "bzz-raw://0f95c4f41f87cd9aa6e6e43d45a0839a6a221e737d9c819fff21280e9c1f34ba",
          "dweb:/ipfs/QmdvgrZQCnEDtbSN9jEHsD3r5N8LmE5LAM5y6giVWD1rLW"
        ],
        "license": "MIT"
      },
      "src/core/Licenser.sol": {
        "keccak256": "0xb9892f08d3dc897b03080e9d6359327b088f81074bc10f0d32c1962f9b0d09c2",
        "urls": [
          "bzz-raw://aada56172cdfaf01d750431fb8702d29976771ec11b2c6f3a1017c0947f056b6",
          "dweb:/ipfs/QmbZ8JXQ7y3x4UNoiqRsJYMK6DyWbPZp6ajGu7BhRb8Bpb"
        ],
        "license": "MIT"
      },
      "src/interfaces/IDyad.sol": {
        "keccak256": "0x503b119f3501fedbda2e1e3eb219b9b57a1d677b8a764b9e760c53497dbff82e",
        "urls": [
          "bzz-raw://0b5e55f86b9169b7a751996c751c86344ea891604d185d7010452b6a8e35beaa",
          "dweb:/ipfs/QmPx7dS1o5Bfp3jYDDhcz7WTrF1dJMQ14XfsGwLcgKGtiX"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/core/Dyad.sol",
    "id": 31197,
    "exportedSymbols": {
      "Dyad": [
        31196
      ],
      "ERC20": [
        30420
      ],
      "IDyad": [
        32209
      ],
      "Licenser": [
        31241
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1017:38",
    "nodes": [
      {
        "id": 31094,
        "nodeType": "PragmaDirective",
        "src": "32:24:38",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 31096,
        "nodeType": "ImportDirective",
        "src": "58:49:38",
        "nodes": [],
        "absolutePath": "src/interfaces/IDyad.sol",
        "file": "../interfaces/IDyad.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31197,
        "sourceUnit": 32210,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31095,
              "name": "IDyad",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32209,
              "src": "66:5:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31098,
        "nodeType": "ImportDirective",
        "src": "108:40:38",
        "nodes": [],
        "absolutePath": "src/core/Licenser.sol",
        "file": "./Licenser.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31197,
        "sourceUnit": 31242,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31097,
              "name": "Licenser",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31241,
              "src": "116:8:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31100,
        "nodeType": "ImportDirective",
        "src": "149:55:38",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "@solmate/src/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31197,
        "sourceUnit": 30421,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31099,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30420,
              "src": "157:5:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31196,
        "nodeType": "ContractDefinition",
        "src": "206:842:38",
        "nodes": [
          {
            "id": 31110,
            "nodeType": "VariableDeclaration",
            "src": "267:34:38",
            "nodes": [],
            "constant": false,
            "functionSelector": "f790d78f",
            "mutability": "immutable",
            "name": "licenser",
            "nameLocation": "293:8:38",
            "scope": 31196,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Licenser_$31241",
              "typeString": "contract Licenser"
            },
            "typeName": {
              "id": 31109,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31108,
                "name": "Licenser",
                "nameLocations": [
                  "267:8:38"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31241,
                "src": "267:8:38"
              },
              "referencedDeclaration": 31241,
              "src": "267:8:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Licenser_$31241",
                "typeString": "contract Licenser"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31116,
            "nodeType": "VariableDeclaration",
            "src": "348:61:38",
            "nodes": [],
            "constant": false,
            "functionSelector": "7f4781fc",
            "mutability": "mutable",
            "name": "mintedDyad",
            "nameLocation": "399:10:38",
            "scope": 31196,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 31115,
              "keyType": {
                "id": 31111,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "357:7:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "348:43:38",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 31114,
                "keyType": {
                  "id": 31112,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:4:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "368:22:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 31113,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "385:4:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 31127,
            "nodeType": "FunctionDefinition",
            "src": "415:73:38",
            "nodes": [],
            "body": {
              "id": 31126,
              "nodeType": "Block",
              "src": "455:33:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31122,
                      "name": "licenser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31110,
                      "src": "462:8:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Licenser_$31241",
                        "typeString": "contract Licenser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31123,
                      "name": "_licenser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31119,
                      "src": "473:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Licenser_$31241",
                        "typeString": "contract Licenser"
                      }
                    },
                    "src": "462:20:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Licenser_$31241",
                      "typeString": "contract Licenser"
                    }
                  },
                  "id": 31125,
                  "nodeType": "ExpressionStatement",
                  "src": "462:20:38"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 31120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31119,
                  "mutability": "mutable",
                  "name": "_licenser",
                  "nameLocation": "441:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 31127,
                  "src": "432:18:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Licenser_$31241",
                    "typeString": "contract Licenser"
                  },
                  "typeName": {
                    "id": 31118,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31117,
                      "name": "Licenser",
                      "nameLocations": [
                        "432:8:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31241,
                      "src": "432:8:38"
                    },
                    "referencedDeclaration": 31241,
                    "src": "432:8:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Licenser_$31241",
                      "typeString": "contract Licenser"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "426:28:38"
            },
            "returnParameters": {
              "id": 31121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "455:0:38"
            },
            "scope": 31196,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31141,
            "nodeType": "ModifierDefinition",
            "src": "492:108:38",
            "nodes": [],
            "body": {
              "id": 31140,
              "nodeType": "Block",
              "src": "524:76:38",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 31134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "534:32:38",
                    "subExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 31131,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "555:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 31132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "559:6:38",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "555:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 31129,
                          "name": "licenser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31110,
                          "src": "535:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Licenser_$31241",
                            "typeString": "contract Licenser"
                          }
                        },
                        "id": 31130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "544:10:38",
                        "memberName": "isLicensed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31208,
                        "src": "535:19:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 31133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "535:31:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31138,
                  "nodeType": "IfStatement",
                  "src": "530:58:38",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 31135,
                        "name": "NotLicensed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32186,
                        "src": "575:11:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 31136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "575:13:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 31137,
                    "nodeType": "RevertStatement",
                    "src": "568:20:38"
                  }
                },
                {
                  "id": 31139,
                  "nodeType": "PlaceholderStatement",
                  "src": "594:1:38"
                }
              ]
            },
            "name": "licensedVaultManager",
            "nameLocation": "501:20:38",
            "parameters": {
              "id": 31128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:2:38"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 31168,
            "nodeType": "FunctionDefinition",
            "src": "628:193:38",
            "nodes": [],
            "body": {
              "id": 31167,
              "nodeType": "Block",
              "src": "747:74:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31154,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31146,
                        "src": "761:2:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31155,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31148,
                        "src": "765:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31153,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30391,
                      "src": "755:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 31156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "755:17:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31157,
                  "nodeType": "ExpressionStatement",
                  "src": "755:17:38"
                },
                {
                  "expression": {
                    "id": 31165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 31158,
                          "name": "mintedDyad",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31116,
                          "src": "780:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 31162,
                        "indexExpression": {
                          "expression": {
                            "id": 31159,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "791:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 31160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "795:6:38",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "791:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "780:22:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 31163,
                      "indexExpression": {
                        "id": 31161,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31144,
                        "src": "803:2:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "780:26:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 31164,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31148,
                      "src": "810:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "780:36:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31166,
                  "nodeType": "ExpressionStatement",
                  "src": "780:36:38"
                }
              ]
            },
            "baseFunctions": [
              32198
            ],
            "documentation": {
              "id": 31142,
              "nodeType": "StructuredDocumentation",
              "src": "604:21:38",
              "text": "@inheritdoc IDyad"
            },
            "functionSelector": "836a1040",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31151,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31150,
                  "name": "licensedVaultManager",
                  "nameLocations": [
                    "721:20:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31141,
                  "src": "721:20:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "721:20:38"
              }
            ],
            "name": "mint",
            "nameLocation": "637:4:38",
            "parameters": {
              "id": 31149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31144,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "657:2:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 31168,
                  "src": "649:10:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31143,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31146,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "676:2:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 31168,
                  "src": "668:10:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31148,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "694:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 31168,
                  "src": "686:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31147,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "641:63:38"
            },
            "returnParameters": {
              "id": 31152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:0:38"
            },
            "scope": 31196,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31195,
            "nodeType": "FunctionDefinition",
            "src": "849:197:38",
            "nodes": [],
            "body": {
              "id": 31194,
              "nodeType": "Block",
              "src": "970:76:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31181,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31173,
                        "src": "984:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31182,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31175,
                        "src": "990:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31180,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30419,
                      "src": "978:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 31183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:19:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31184,
                  "nodeType": "ExpressionStatement",
                  "src": "978:19:38"
                },
                {
                  "expression": {
                    "id": 31192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 31185,
                          "name": "mintedDyad",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31116,
                          "src": "1005:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 31189,
                        "indexExpression": {
                          "expression": {
                            "id": 31186,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1016:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 31187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1020:6:38",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1016:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1005:22:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 31190,
                      "indexExpression": {
                        "id": 31188,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31171,
                        "src": "1028:2:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1005:26:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 31191,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31175,
                      "src": "1035:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1005:36:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31193,
                  "nodeType": "ExpressionStatement",
                  "src": "1005:36:38"
                }
              ]
            },
            "baseFunctions": [
              32208
            ],
            "documentation": {
              "id": 31169,
              "nodeType": "StructuredDocumentation",
              "src": "825:21:38",
              "text": "@inheritdoc IDyad"
            },
            "functionSelector": "9eea5f66",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31178,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31177,
                  "name": "licensedVaultManager",
                  "nameLocations": [
                    "944:20:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31141,
                  "src": "944:20:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "944:20:38"
              }
            ],
            "name": "burn",
            "nameLocation": "858:4:38",
            "parameters": {
              "id": 31176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31171,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "878:2:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 31195,
                  "src": "870:10:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31170,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31173,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "897:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 31195,
                  "src": "889:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31175,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "917:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 31195,
                  "src": "909:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31174,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "862:65:38"
            },
            "returnParameters": {
              "id": 31179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "970:0:38"
            },
            "scope": 31196,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "4459414420537461626c65",
                "id": 31102,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "229:13:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_ed89148ede4a936a397ecfb0b9ba41c0046417d3ab214522959e9aba304e3f1e",
                  "typeString": "literal_string \"DYAD Stable\""
                },
                "value": "DYAD Stable"
              },
              {
                "hexValue": "44594144",
                "id": 31103,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "244:6:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_57bd728cc6cfd84ac9c146530c32d289a1d90838cf23960b8bedfbb3597ef414",
                  "typeString": "literal_string \"DYAD\""
                },
                "value": "DYAD"
              },
              {
                "hexValue": "3138",
                "id": 31104,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "252:2:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              }
            ],
            "baseName": {
              "id": 31101,
              "name": "ERC20",
              "nameLocations": [
                "223:5:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30420,
              "src": "223:5:38"
            },
            "id": 31105,
            "nodeType": "InheritanceSpecifier",
            "src": "223:32:38"
          },
          {
            "baseName": {
              "id": 31106,
              "name": "IDyad",
              "nameLocations": [
                "257:5:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32209,
              "src": "257:5:38"
            },
            "id": 31107,
            "nodeType": "InheritanceSpecifier",
            "src": "257:5:38"
          }
        ],
        "canonicalName": "Dyad",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31196,
          32209,
          30420
        ],
        "name": "Dyad",
        "nameLocation": "215:4:38",
        "scope": 31197,
        "usedErrors": [
          32186,
          32188
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 38
}
